{"ast":null,"code":"var _jsxFileName = \"/Users/angelstanimirov/ReactJS_Projects/add-user-app/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\"; // No point in using useState just to read values on every key stroke.\n//Ref hooker is better for this.\n\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport classes from \"./AddUser.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const nameInputRef = useRef(); // Holding the default name input stored as value when clicking the form button.\n\n  const ageInputRef = useRef();\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault();\n    console.log(nameInputRef.current.value);\n    console.log(ageInputRef.current.value);\n    const enteredUserName = nameInputRef.current.value;\n    const enteredUserAge = ageInputRef.current.value;\n\n    if (enteredUserName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values).\"\n      });\n      return;\n    } // Check if something is entered inside the inputs before continuing.\n\n\n    if (+enteredUserAge < 1) {\n      setError({\n        title: \"Invalid age.\",\n        message: \"Please enter a valid age (> 0).\"\n      });\n      return;\n    }\n\n    console.log(enteredUserName, enteredUserAge);\n    props.onAddUser(enteredUserName, enteredUserAge); // Calling the AddUserHandler\" function from App.js\n    // And passing these stored values from the addUserHandler function here.\n\n    nameInputRef.current.value = \"\"; // Resetting the form input name value.\n\n    ageInputRef.current.value = \"\";\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [//If there is error display this:\n    error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"oeh9P4do1L6ON2Ex+93ODUUduFk=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/angelstanimirov/ReactJS_Projects/add-user-app/src/components/Users/AddUser.js"],"names":["React","useState","useRef","Card","Button","ErrorModal","classes","AddUser","props","nameInputRef","ageInputRef","error","setError","addUserHandler","event","preventDefault","console","log","current","value","enteredUserName","enteredUserAge","trim","length","title","message","onAddUser","errorHandler","input"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\"; // No point in using useState just to read values on every key stroke.\n//Ref hooker is better for this.\n\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport classes from \"./AddUser.module.css\";\n\nconst AddUser = (props) => {\n  const nameInputRef = useRef(); // Holding the default name input stored as value when clicking the form button.\n  const ageInputRef = useRef();\n\n  const [error, setError] = useState();\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    console.log(nameInputRef.current.value);\n    console.log(ageInputRef.current.value);\n\n    const enteredUserName = nameInputRef.current.value;\n    const enteredUserAge = ageInputRef.current.value;\n\n    if (\n      enteredUserName.trim().length === 0 ||\n      enteredUserAge.trim().length === 0\n    ) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values).\",\n      });\n      return;\n    } // Check if something is entered inside the inputs before continuing.\n\n    if (+enteredUserAge < 1) {\n      setError({\n        title: \"Invalid age.\",\n        message: \"Please enter a valid age (> 0).\",\n      });\n      return;\n    }\n\n    console.log(enteredUserName, enteredUserAge);\n    props.onAddUser(enteredUserName, enteredUserAge); // Calling the AddUserHandler\" function from App.js\n    // And passing these stored values from the addUserHandler function here.\n\n    nameInputRef.current.value = \"\"; // Resetting the form input name value.\n    ageInputRef.current.value = \"\";\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <React.Fragment>\n      {\n        //If there is error display this:\n        error && (\n          <ErrorModal\n            title={error.title}\n            message={error.message}\n            onConfirm={errorHandler}\n          />\n        )\n      }\n      <Card className={classes.input}>\n        <form onSubmit={addUserHandler}>\n          <label htmlFor=\"username\">Username</label>\n          <input id=\"username\" type=\"text\" ref={nameInputRef} />\n          <label htmlFor=\"age\">Age (Years)</label>\n          <input id=\"age\" type=\"number\" ref={ageInputRef} />\n          <Button type=\"submit\">Add User</Button>\n        </form>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}