{"ast":null,"code":"import _slicedToArray from\"/Users/angelstanimirov/ReactJS_Projects/add-user-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import Card from\"../UI/Card\";import Button from\"../UI/Button\";import ErrorModal from\"../UI/ErrorModal\";import classes from\"./AddUser.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddUser=function AddUser(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),enteredUsername=_useState2[0],setEnteredUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),enteredAge=_useState4[0],setEnteredAge=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var addUserHandler=function addUserHandler(event){event.preventDefault();if(enteredUsername.trim().length===0||enteredAge.trim().length===0){setError({title:\"Invalid input\",message:\"Please enter a valid name and age (non-empty values).\"});return;}//Check if something is entered inside the inputs before continuing.\nif(enteredAge<1){setError({title:\"Invalid age\",message:\"Please enter a valid age (> 0).\"});return;}console.log(enteredUsername,enteredAge);props.onAddUser(enteredUsername,enteredAge);//Calling the AddUserHandler\" function from App.js\n// And passing these stored values from the addUserHandler function here.\nsetEnteredUsername(\"\");setEnteredAge(\"\");//Resetting the state after entering the age or username.\n};var usernameChangeHandler=function usernameChangeHandler(event){setEnteredUsername(event.target.value);};var ageChangeHandler=function ageChangeHandler(event){setEnteredAge(event.target.value);};var errorHandler=function errorHandler(){setError(null);};return/*#__PURE__*/_jsxs(\"section\",{children:[//If there is error display this:\nerror&&/*#__PURE__*/_jsx(ErrorModal,{title:error.title,message:error.message,onConfirm:errorHandler}),/*#__PURE__*/_jsx(Card,{className:classes.input,children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:addUserHandler,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{id:\"username\",type:\"text\",value:enteredUsername// Storring the entered username or age as value\n// When clicking the submit button for reset.\n,onChange:usernameChangeHandler}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"age\",children:\"Age (Years)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"age\",type:\"number\",value:enteredAge,onChange:ageChangeHandler}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Add User\"})]})})]});};export default AddUser;","map":{"version":3,"sources":["/Users/angelstanimirov/ReactJS_Projects/add-user-app/src/components/Users/AddUser.js"],"names":["React","useState","Card","Button","ErrorModal","classes","AddUser","props","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","error","setError","addUserHandler","event","preventDefault","trim","length","title","message","console","log","onAddUser","usernameChangeHandler","target","value","ageChangeHandler","errorHandler","input"],"mappings":"0IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,IAAP,KAAiB,YAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACzB,cAA8CN,QAAQ,CAAC,EAAD,CAAtD,wCAAOO,eAAP,eAAwBC,kBAAxB,eACA,eAAoCR,QAAQ,CAAC,EAAD,CAA5C,yCAAOS,UAAP,eAAmBC,aAAnB,eACA,eAA0BV,QAAQ,EAAlC,yCAAOW,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChCA,KAAK,CAACC,cAAN,GACA,GAAIR,eAAe,CAACS,IAAhB,GAAuBC,MAAvB,GAAkC,CAAlC,EAAuCR,UAAU,CAACO,IAAX,GAAkBC,MAAlB,GAA6B,CAAxE,CAA2E,CACzEL,QAAQ,CAAC,CACPM,KAAK,CAAE,eADA,CAEPC,OAAO,CAAE,uDAFF,CAAD,CAAR,CAIA,OACD,CAAC;AAEF,GAAIV,UAAU,CAAG,CAAjB,CAAoB,CAClBG,QAAQ,CAAC,CACPM,KAAK,CAAE,aADA,CAEPC,OAAO,CAAE,iCAFF,CAAD,CAAR,CAIA,OACD,CAEDC,OAAO,CAACC,GAAR,CAAYd,eAAZ,CAA6BE,UAA7B,EACAH,KAAK,CAACgB,SAAN,CAAgBf,eAAhB,CAAiCE,UAAjC,EAA8C;AAC9C;AACAD,kBAAkB,CAAC,EAAD,CAAlB,CACAE,aAAa,CAAC,EAAD,CAAb,CAAmB;AACpB,CAvBD,CAyBA,GAAMa,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACT,KAAD,CAAW,CACvCN,kBAAkB,CAACM,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAlB,CACD,CAFD,CAIA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACZ,KAAD,CAAW,CAClCJ,aAAa,CAACI,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAb,CACD,CAFD,CAIA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBf,QAAQ,CAAC,IAAD,CAAR,CACD,CAFD,CAIA,mBACE,2BAEI;AACAD,KAAK,eACH,KAAC,UAAD,EACE,KAAK,CAAEA,KAAK,CAACO,KADf,CAEE,OAAO,CAAEP,KAAK,CAACQ,OAFjB,CAGE,SAAS,CAAEQ,YAHb,EAJN,cAWE,KAAC,IAAD,EAAM,SAAS,CAAEvB,OAAO,CAACwB,KAAzB,uBACE,cAAM,QAAQ,CAAEf,cAAhB,wBACE,cAAO,OAAO,CAAC,UAAf,sBADF,cAEE,cACE,EAAE,CAAC,UADL,CAEE,IAAI,CAAC,MAFP,CAGE,KAAK,CAAEN,eAAiB;AACxB;AAJF,CAKE,QAAQ,CAAEgB,qBALZ,EAFF,cASE,cAAO,OAAO,CAAC,KAAf,yBATF,cAUE,cACE,EAAE,CAAC,KADL,CAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAEd,UAHT,CAIE,QAAQ,CAAEiB,gBAJZ,EAVF,cAgBE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,sBAhBF,GADF,EAXF,GADF,CAkCD,CA5ED,CA8EA,cAAerB,CAAAA,OAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport classes from \"./AddUser.module.css\";\n\nconst AddUser = (props) => {\n  const [enteredUsername, setEnteredUsername] = useState(\"\");\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const [error, setError] = useState();\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid name and age (non-empty values).\",\n      });\n      return;\n    } //Check if something is entered inside the inputs before continuing.\n\n    if (enteredAge < 1) {\n      setError({\n        title: \"Invalid age\",\n        message: \"Please enter a valid age (> 0).\",\n      });\n      return;\n    }\n\n    console.log(enteredUsername, enteredAge);\n    props.onAddUser(enteredUsername, enteredAge); //Calling the AddUserHandler\" function from App.js\n    // And passing these stored values from the addUserHandler function here.\n    setEnteredUsername(\"\");\n    setEnteredAge(\"\"); //Resetting the state after entering the age or username.\n  };\n\n  const usernameChangeHandler = (event) => {\n    setEnteredUsername(event.target.value);\n  };\n\n  const ageChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <section>\n      {\n        //If there is error display this:\n        error && (\n          <ErrorModal\n            title={error.title}\n            message={error.message}\n            onConfirm={errorHandler}\n          />\n        )\n      }\n      <Card className={classes.input}>\n        <form onSubmit={addUserHandler}>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={enteredUsername} // Storring the entered username or age as value\n            // When clicking the submit button for reset.\n            onChange={usernameChangeHandler}\n          />\n          <label htmlFor=\"age\">Age (Years)</label>\n          <input\n            id=\"age\"\n            type=\"number\"\n            value={enteredAge}\n            onChange={ageChangeHandler}\n          />\n          <Button type=\"submit\">Add User</Button>\n        </form>\n      </Card>\n    </section>\n  );\n};\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}